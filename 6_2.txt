#include <stdio.h>
#include <time.h>
#include <stdlib.h>
#include <math.h>

int min_index(int a[],int col);
int dob_el(int b[],int col1);
int main(void){
const int col=5, Low=-100, High=100;
srand(time(0));
int a[col];
int min,dob;
for(int i = 0; i < col; i++)
{
  a[i]=Low+rand()%High;
}
for(int i = 0; i < col; i++)
{
  printf("a[%d]=%d\n", i, a[i]);
}
min=min_index(a, col);
dob=dob_el(a, col);
printf("номер мінімального за модулем елемента масиву:%d\n", min);
if(dob==999)
{
printf("недостатньо нулів\n");
}
else
{
printf("добуток елементів масиву, розташованих між першим й другим нульовими елементами.:%d\n", dob);
}
  return 0;
}

int min_index(int a[],int col) //номер мінімального за модулем елемента масиву
{
int min=a[0],min_el;
for(int i = 0; i < col; i++) //мінімальне число
{
  if(a[i]<min)
  min=a[i];
}
for(int i = 0; i < col; i++) //індекс мінімального числа
{
if(min==a[i])
 {
 min_el = i;
 }
 }
return min_el;
}

int dob_el(int b[],int col1) //добуток елементів масиву, розташованих між першим й другим нульовими елементами
{
int ma,mi,d=1,dob=1;
int min = b[0];
int max = b[0];
for(int i=0; i<col1; i++)  //перший нуль
{
  if(b[i]==0)
  {
    min=b[i];
  }
}
for(int i=0; i<col1; i++) //індекс першого нуля
{
  if(min==b[i])
  {
    mi=i;
  }
}
for(int i=col1-1; i>=0; i--) //другий нуль
{
  if(b[i] == 0)
   {
   max = b[i];
   d+=1;
   }
}
for(int i=col1-1; i>=0; i--) //індекс другого нуля
{
  if(max==b[i])
   {
   ma=i;
   d+=1;
   }
}
if(max!=0 || min!=0)
{
return 999;
}
else if(ma==mi)
{
return 999;
}
else
{
for(int i=ma+1; i<mi; i++)
{
    dob*=b[i];
}
return dob;
}
}